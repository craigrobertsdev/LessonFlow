@rendermode InteractiveServer
@using LessonFlow.Components.AccountSetup.State

<div class="w-full">
    <div class="flex items-center justify-between w-full">
        <div class="flex flex-col items-center relative">
            <div class="@GetStepNumberClass(AccountSetupStep.BasicInfo)">1</div>
            <div class="@GetStepTextClass(AccountSetupStep.BasicInfo)">Basic Info</div>
        </div>
        <div class="@GetConnectorBarClass(AccountSetupStep.BasicInfo, AccountSetupStep.Subjects)"></div>
        <div class="flex flex-col items-center relative">
            <div class="@GetStepNumberClass(AccountSetupStep.Subjects)">2</div>
            <div class="@GetStepTextClass(AccountSetupStep.Subjects)">Subjects</div>
        </div>
        <div class="@GetConnectorBarClass(AccountSetupStep.Subjects, AccountSetupStep.Timing)"></div>
        <div class="flex flex-col items-center relative">
            <div class="@GetStepNumberClass(AccountSetupStep.Timing)">3</div>
            <div class="@GetStepTextClass(AccountSetupStep.Timing)">Schedule Timing</div>
        </div>
        <div class="@GetConnectorBarClass(AccountSetupStep.Timing, AccountSetupStep.Schedule)"></div>
        <div class="flex flex-col items-center relative">
            <div class="@GetStepNumberClass(AccountSetupStep.Schedule)">4</div>
            <div class="@GetStepTextClass(AccountSetupStep.Schedule)">Weekly Schedule</div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    private AccountSetupState State { get; set; } = null!;
 
    private bool IsActive(AccountSetupStep step) => State.CurrentStep == step;
    private bool IsCompleted(AccountSetupStep step) => State.CompletedSteps.Contains(step);

    private string GetStepNumberClass(AccountSetupStep step)
        => string.Join(" ", new[]
        {
            "w-8 h-8 rounded-full flex items-center justify-center font-semibold",
            IsActive(step) ? "bg-blue-500 text-white" :
            IsCompleted(step) ? "bg-emerald-500 text-white" :
            "bg-gray-200 text-gray-500"
        });

    private string GetStepTextClass(AccountSetupStep step)
        => string.Join(" ", new[]
        {
            "mt-2 text-sm font-medium",
            IsActive(step) ? "text-gray-800" : "text-gray-500"
        });

    private string GetConnectorBarClass(AccountSetupStep fromStep, AccountSetupStep toStep)
        => string.Join(" ", new[]
        {
            "flex-1 h-0.5 mx-2",
            State.CompletedSteps.Contains(fromStep) ? "bg-emerald-500" : "bg-gray-200"
        });
}
